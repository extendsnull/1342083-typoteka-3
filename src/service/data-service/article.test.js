'use strict';

const {beforeAll, describe, expect, test} = require(`@jest/globals`);
const ArticleService = require(`./article`);

const mockData = [
  {
    id: `SCBxCh`,
    title: `Обзор новейшего смартфона`,
    createdDate: `2021-07-19 07:04:58`,
    announce: `Собрать камни бесконечности легко, если вы прирожденный герой.`,
    fullText: `Золотое сечение — соотношение двух величин, гармоническая пропорция. Он написал больше 30 хитов. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Это один из лучших рок-музыкантов. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Программировать не настолько сложно, как об этом говорят. Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Как начать действовать? Для начала просто соберитесь. Достичь успеха помогут ежедневные повторения. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?,`,
    category: [
      `Деревья`,
      `Музыка`,
      `За жизнь`
    ],
    comments: [
      {
        id: `psZOIO`,
        text: `Согласен с автором!`
      },
      {
        id: `8CMMaM`,
        text: `Планируете записать видосик на эту тему?`
      }
    ]
  },
  {
    id: `DtTy1q`,
    title: `Учим HTML и CSS`,
    createdDate: `2021-08-06 08:03:49`,
    announce: `Собрать камни бесконечности легко, если вы прирожденный герой. Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Программировать не настолько сложно, как об этом говорят. Ёлки — это не просто красивое дерево. Это прочная древесина. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете.`,
    fullText: `Золотое сечение — соотношение двух величин, гармоническая пропорция. Ёлки — это не просто красивое дерево. Это прочная древесина. Как начать действовать? Для начала просто соберитесь. Он написал больше 30 хитов. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?, Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Программировать не настолько сложно, как об этом говорят. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Простые ежедневные упражнения помогут достичь успеха. Первая большая ёлка была установлена только в 1938 году.`,
    category: [
      `За жизнь`,
      `Программирование`,
      `Без рамки`
    ],
    comments: [
      {
        id: `w-i4e9`,
        text: `Мне кажется или я уже читал это где-то?`
      },
      {
        id: `W1PYw2`,
        text: `Согласен с автором!`
      }
    ]
  },
  {
    id: `4NZdDA`,
    title: `Лучшие рок-музыканты 20-века`,
    createdDate: `2021-09-14 08:19:29`,
    announce: `Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Из под его пера вышло 8 платиновых альбомов.`,
    fullText: `Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?, Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Простые ежедневные упражнения помогут достичь успеха. Собрать камни бесконечности легко, если вы прирожденный герой. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Золотое сечение — соотношение двух величин, гармоническая пропорция.`,
    category: [
      `Разное`,
      `IT`,
      `Программирование`
    ],
    comments: [
      {
        id: `dfQ7JS`,
        text: `Планируете записать видосик на эту тему?`
      },
      {
        id: `6BzuH3`,
        text: `Хочу такую же футболку :-)`
      },
      {
        id: `4SMHt4`,
        text: `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.`
      }
    ]
  },
  {
    id: `uv1VCg`,
    title: `Как перестать беспокоиться и начать жить`,
    createdDate: `2021-07-29 08:09:10`,
    announce: `Это один из лучших рок-музыкантов. Из под его пера вышло 8 платиновых альбомов. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?, Программировать не настолько сложно, как об этом говорят.`,
    fullText: `Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Это один из лучших рок-музыкантов. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Собрать камни бесконечности легко, если вы прирожденный герой. Как начать действовать? Для начала просто соберитесь. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Первая большая ёлка была установлена только в 1938 году. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами.`,
    category: [
      `Программирование`,
      `Разное`
    ],
    comments: [
      {
        id: `XmeY1f`,
        text: `Мне кажется или я уже читал это где-то?`
      },
      {
        id: `hSai8O`,
        text: `Совсем немного...`
      },
      {
        id: `Y557Re`,
        text: `Плюсую, но слишком много буквы!`
      }
    ]
  },
  {
    id: `_xvGNa`,
    title: `Как перестать беспокоиться и начать жить`,
    createdDate: `2021-08-25 06:18:45`,
    announce: `Это один из лучших рок-музыкантов.`,
    fullText: `Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Программировать не настолько сложно, как об этом говорят. Как начать действовать? Для начала просто соберитесь. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Достичь успеха помогут ежедневные повторения. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Собрать камни бесконечности легко, если вы прирожденный герой. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?, Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Из под его пера вышло 8 платиновых альбомов. Это один из лучших рок-музыкантов. Первая большая ёлка была установлена только в 1938 году. Ёлки — это не просто красивое дерево. Это прочная древесина. Простые ежедневные упражнения помогут достичь успеха. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Он написал больше 30 хитов.`,
    category: [
      `Разное`
    ],
    comments: [
      {
        id: `z3Vt-r`,
        text: `Это где ж такие красоты?`
      },
      {
        id: `WBzeub`,
        text: `Хочу такую же футболку :-)`
      },
      {
        id: `fNwN3_`,
        text: `Плюсую, но слишком много буквы!`
      }
    ]
  }
];

const articleMock = {
  title: `Как начать программировать`,
  createdDate: `2021-09-29 11:15:35`,
  announce: `Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Программировать не настолько сложно, как об этом говорят. Золотое сечение — соотношение двух величин, гармоническая пропорция. Из под его пера вышло 8 платиновых альбомов. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем.`,
  fullText: `Он написал больше 30 хитов. Это один из лучших рок-музыкантов. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Достичь успеха помогут ежедневные повторения. Первая большая ёлка была установлена только в 1938 году.`,
  category: [
    `Разное`
  ],
};

describe(`ArticleService возвращает публикации`, () => {
  let service;
  let articles;

  beforeAll(() => {
    service = new ArticleService(mockData);
    articles = service.findAll();
  });

  test(`Возвращает массив из ${mockData.length} публикаций`, () => {
    expect(Array.isArray(articles)).toBeTruthy();
    expect(articles.length).toBe(mockData.length);
  });

  test(`Id первой публикации равен "${mockData[0].id}"`, () => {
    expect(articles[0].id).toBe(mockData[0].id);
  });

  test(`Возвращает публикацю с id равным "${mockData[1].id}"`, () => {
    const article = service.findOne(mockData[1].id);
    expect(article.id).toBe(mockData[1].id);
  });
});

describe(`ArticleService редактирует список публикаций`, () => {
  const service = new ArticleService(mockData);
  const someId = mockData[1].id;
  const articleTitle = `Отредактированный заголовок статьи, внезапно`;

  test(`Создает публикацию`, () => {
    const newArticle = service.create(articleMock);
    expect(newArticle).toMatchObject({
      id: expect.any(String),
      title: expect.any(String),
      createdDate: expect.any(String),
      announce: expect.any(String),
      fullText: expect.any(String),
      category: expect.any(Array),
      comments: expect.any(Array),
    });
  });

  test(`Количество публикаций после добавления равно 6`, () => {
    const articles = service.findAll();
    expect(articles.length).toBe(6);
  });

  test(`Редактирует публикацию с id "${someId}"`, () => {
    const update = {
      title: articleTitle,
    };
    const updatedArticle = service.update(someId, update);
    expect(updatedArticle.title).toBe(update.title);
  });

  test(`Заголовок публикации с id "${someId}" равен "${articleTitle}"`, () => {
    const article = service.findOne(someId);
    expect(article.title).toBe(articleTitle);
  });

  test(`Удаляет публикацию с id "${someId}"`, () => {
    const droppedArticle = service.drop(someId);
    expect(droppedArticle.id).toBe(someId);
    expect(droppedArticle.title).toBe(articleTitle);
  });

  test(`Количество публикаций после удаления равно 5`, () => {
    const articles = service.findAll();
    expect(articles.length).toBe(5);
  });

  test(`Возвращает null, если публикация для удаления не найдена`, () => {
    const result = service.drop(`whatislove`);
    expect(result).toBeNull();
  });
});

